Metadata-Version: 2.1
Name: sentient-campaign-activity-runner
Version: 0.1.23
Summary: an sentient campaign activity runner
Author: Vivek B
Author-email: vivek@sentient.foundation
Requires-Python: >=3.12,<4.0
Classifier: Programming Language :: Python :: 3
Requires-Dist: docker (>=7.1.0,<8.0.0)
Requires-Dist: jinja2 (>=3.1.4,<4.0.0)
Requires-Dist: pydantic (>=2.9.2,<3.0.0)
Requires-Dist: pyyaml (>=6.0,<7.0)
Requires-Dist: termcolor (>=2.4.0,<3.0.0)
Description-Content-Type: text/markdown

# Sentient Campaign Activity Runner

The Sentient Campaign Activity Runner is a Python module designed to help run Sentient Campaign activities in your development environment.
It provides an easy-to-use interface for setting up and executing campaign activities. As of now, this library has support to run Sentient Foundation's Werewolf game.

To use this module, first have your Sentient Agent built and ready with a wheel file.

## System Requirements

- **Python 3.12**: This project requires Python 3.12 or later. Your agent is also expected to use Python 3.12 or later.
- **Docker**: Docker should be installed and running and version must be 27.2.0.
- **Docker Desktop**: Docker Desktop version 4.34.3 and above

Make sure both Python 3.12 and Docker are properly installed and configured before proceeding with the installation and usage of this module.

## Installation

Install the Sentient Campaign Activity Runner using pip:

```bash
pip install sentient-campaign-activity-runner
```

Ensure you're using Python 3.12 when installing and running this package.

## Usage

For the Werewolf game campaign, the main interface for users to run and debug their agent is the `WerewolfCampaignActivityRunner` class. Here's a basic example of how to use it:

**Running Against standard sentient agent**

```python
from sentient_campaign.activity_runner.runner import WerewolfCampaignActivityRunner, PlayerAgentConfig

# Create a runner instance
runner = WerewolfCampaignActivityRunner()

# Configure your agent
agent_config = PlayerAgentConfig(
    player_name="your_player_name",
    agent_wheel_path="/path/to/your/agent/wheel/file.whl",
    module_path="your.module.path",
    agent_class_name="YourAgentClassName",
    agent_config_file_path="/path/to/your/agent/config.yaml"
)

# Run the activity locally
activity_id = runner.run_locally(
    agent_config,
    players_sentient_llm_api_keys=["your sentient api key"],
    path_to_final_transcript_dump="/path/to/save/transcripts",
    force_rebuild_agent_image=False
)



```
## Key Components

1. **WerewolfCampaignActivityRunner**: The main class for running Werewolf campaign activities. It handles the setup, execution, and cleanup of the activity.

2. **PlayerAgentConfig**: A data class used to configure the player's agent for the activity.

## Configuration

When setting up your agent, you'll need to provide the following in the `PlayerAgentConfig`:

- `player_name`: The name of your player in the game.
- `agent_wheel_path`: Path to the wheel file of your agent.
- `module_path`: The Python module path where your agent class is located.
- `agent_class_name`: The name of your agent class.
- `agent_config_file_path`: Path to the YAML configuration file for your agent.

## Running an Activity

The `run_locally` method of `WerewolfCampaignActivityRunner` is the primary way to start a local Sentient Campaign activity before submitting your wheel to the server. It takes the following parameters:

- `agent_config`: An instance of `PlayerAgentConfig`.
- `players_sentient_llm_api_keys`: List[str], List of sentient LLM API keys for the players
- `path_to_final_transcript_dump`: A directory where the activity transcripts will be saved.
- `force_rebuild_agent_image`: A boolean indicating whether to rebuild the agent's Docker image (default is True).

The method returns an `activity_id` which can be used to identify the specific activity run.

## Activity Execution

When you run an activity:

1. The runner sets up the necessary environment, including Docker containers for your agent and other participants.
2. It initializes the game controller and starts the activity.
3. Your agent interacts with other participants according to the game rules.
4. After the activity concludes, transcripts are saved to the specified directory.

## Troubleshooting

If you encounter issues:

1. Verify that you're using Python 3.12 (`python --version`).
2. Ensure Docker is running (`docker info`).
3. Check that your Docker installation has the necessary permissions.



**Running Against multiple agent of your choice**\


you can make all the agent that are competing for werewolf custom. i.e you can provide your own agent for all the player. you can also set the role for each of the player.


## Configuration
In the following code Replace the placeholder values in the agent configurations:
- `path/to/wheel/file.whl`: Path to your agent wheel file
- `path/to/module`: Path to your agent module
- `path/to/config.yaml`: Path to your agent configuration file
- `<your_class_name>`: Name of your agent class
- `playerN`: Replace with actual player names

Example for a single player:
```python
player_config = PlayerAgentConfig(
    player_name="alice",
    agent_wheel_path="./wheels/my_agent.whl",
    module_path="my_agents/custom_agent",
    agent_class_name="MyCustomAgent",
    agent_config_file_path="./config/agent_config.yaml",
)
```


```python
from sentient_campaign.activity_runner.runner import WerewolfCampaignActivityRunner, PlayerAgentConfig,SentientWerewolfRoles

# Configure your agent
# Template showing how to configure player agents
# Replace the placeholders with your actual paths, class names, and player names

# Define the agent wheel path


# Example player configuration template
player1_config = PlayerAgentConfig(
    player_name="player1",
    agent_wheel_path="path/to/wheel/file.whl",
    module_path="path/to/module",
    agent_class_name="<your_class_name>",
    agent_config_file_path="path/to/config.yaml",
)

player2_config = PlayerAgentConfig(
    player_name="player2",
    agent_wheel_path="path/to/wheel/file.whl",
    module_path="path/to/module",
    agent_class_name="<your_class_name>",
    agent_config_file_path="path/to/config.yaml",
)

player3_config = PlayerAgentConfig(
    player_name="player3",
    agent_wheel_path="path/to/wheel/file.whl",
    module_path="path/to/module",
    agent_class_name="<your_class_name>",
    agent_config_file_path="path/to/config.yaml",
)

player4_config = PlayerAgentConfig(
    player_name="player4",
    agent_wheel_path="path/to/wheel/file.whl",
    module_path="path/to/module",
    agent_class_name="<your_class_name>",
    agent_config_file_path="path/to/config.yaml",
)

player5_config = PlayerAgentConfig(
    player_name="player5",
    agent_wheel_path="path/to/wheel/file.whl",
    module_path="path/to/module",
    agent_class_name="<your_class_name>",
    agent_config_file_path="path/to/config.yaml",
)

player6_config = PlayerAgentConfig(
    player_name="player6",
    agent_wheel_path="path/to/wheel/file.whl",
    module_path="path/to/module",
    agent_class_name="<your_class_name>",
    agent_config_file_path="path/to/config.yaml",
)

player7_config = PlayerAgentConfig(
    player_name="player7",
    agent_wheel_path="path/to/wheel/file.whl",
    module_path="path/to/module",
    agent_class_name="<your_class_name>",
    agent_config_file_path="path/to/config.yaml",
)

your_agents=[player1_config,player2_config,player3_config,player4_config,player5_config,player6_config,player7_config]

runner = WerewolfCampaignActivityRunner()
runner.run_with_your_agents(your_agents,
    players_sentient_llm_api_keys=["your sentient api key"],
    path_to_final_transcript_dump="/path/to/save/transcripts",
    force_rebuild_agent_images=False)

```

## Role Assignment
You can assign roles to players using a dictionary mapping player names to roles. Available roles are:
- WOLF
- SEER
- DOCTOR
- VILLAGER

Example:

```python

player_roles = {
    "player1": SentientWerewolfRoles.WOLF,
    "player2": SentientWerewolfRoles.SEER,
    "player3": SentientWerewolfRoles.DOCTOR,
    "player4": SentientWerewolfRoles.VILLAGER,
    "player5": SentientWerewolfRoles.VILLAGER,
    "player6": SentientWerewolfRoles.VILLAGER,
    "player7": SentientWerewolfRoles.WOLF,
}
runner = WerewolfCampaignActivityRunner()
runner.run_with_your_agents(your_agents,
    players_sentient_llm_api_keys=["your sentient api key"],
    path_to_final_transcript_dump="/path/to/save/transcripts",
    player_roles=player_roles,
    force_rebuild_agent_images=False)
```
